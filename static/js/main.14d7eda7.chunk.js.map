{"version":3,"sources":["components/FormikField/FormikField.js","containers/Login/Login.js","layouts/DashboardLayout.js","constants/actions/merchants.js","containers/Dashboard/Dashboard.js","redux/actions/merchants.js","utils/constant.js","containers/Dashboard/AddMerchant.js","containers/Dashboard/EditMerchant.js","App.js","redux/reducers/merchants.js","redux/reducers/index.js","serviceWorker.js","index.js"],"names":["FormItem","Item","RangePicker","TextArea","FormikField","AntComponent","field","form","hasFeedback","label","help","submitCount","selectOptions","type","required","layout","componentStyle","formItemStyle","props","reg","touched","getIn","name","submitted","hasError","errors","submittedError","touchedError","validateStatus","style","onBlur","setFieldTouched","onChange","value","target","isNaN","test","setFieldValue","AntInput","AntInputPassword","Password","validationSchema","Yup","shape","email","password","Login","login","values","localStorage","setItem","history","push","message","error","this","item","Fragment","className","initialValues","enableReinitialize","onSubmit","setSubmitting","resetForm","handleSubmit","isSubmitting","component","placeholder","htmlType","disabled","Component","Header","Sider","Content","DashboardLayout","state","collapsed","toggle","setState","handleLogout","removeItem","children","rightContent","key","color","marginRight","icon","margin","onClick","trigger","collapsible","theme","mode","defaultSelectedKeys","to","prefix","withRouter","MERCHANTS","FETCH_MERCHANTS","FETCH_MERCHANT","UPDATE_MERCHANT","DELETE_MERCHANT","ADD_MERCHANT","Title","confirm","Dashboard","handleDelete","id","deleteMerchant","title","onOk","fetchMerchants","merchants","columns","dataIndex","render","text","width","record","level","dataSource","rowKey","mapDispatchToProps","params","connect","formItemLayout","labelCol","md","span","lg","wrapperCol","tailFormItemLayout","offset","Panel","max","shipping_fee","metro_manila","box","oversized","big_pouch","small_pouch","provincial","intra_provincial","AddMerchant","addMerchant","uuid","defaultActiveKey","header","gutter","padding","placement","onConfirm","okText","cancelText","EditMerchant","merchant","match","fetchMerchant","updateMerchant","PrivateRoute","rest","getItem","pathname","App","basename","path","exact","initialState","isLoading","combineReducers","action","find","x","map","filter","i","Boolean","window","location","hostname","store","createStore","rootReducer","composeWithDevTools","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.14d7eda7.chunk.js","sourcesContent":["/* eslint-disable no-undef */\nimport React from 'react';\nimport { DatePicker, Form, Input, TimePicker, Select, InputNumber } from \"antd\";\nimport { getIn } from 'formik';\n\n\nconst FormItem = Form.Item;\nconst { RangePicker } = DatePicker;\nconst { TextArea } = Input;\n\nconst FormikField = AntComponent => ({\n  field,\n  form,\n  hasFeedback,\n  label,\n  help,\n  selectOptions,\n  submitCount,\n  type,\n  required,\n  layout,\n  componentStyle,\n  formItemStyle,\n  ...props\n}) => {\n  const reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\n  const touched = getIn(form.touched, field.name);\n  const submitted = submitCount > 0;\n  const hasError = getIn(form.errors, field.name);\n  const submittedError = hasError && submitted;\n  const touchedError = hasError && touched;\n  const onInputChange = ({ target: { value } }) => {\n    if(type === 'number') {\n      if ((!isNaN(value) && reg.test(value)) || value === '' || value === '-') {\n        form.setFieldValue(field.name, value);\n      }\n    } else {\n      form.setFieldValue(field.name, value);\n    }\n  }\n  const onChange = value => form.setFieldValue(field.name, value);\n  const onBlur = () => form.setFieldTouched(field.name, true);\n\n  return (\n      <FormItem\n        label={label}\n        required={required}\n        hasFeedback={(hasFeedback && submitted) || (hasFeedback && touched) ? true : false}\n        help={(submittedError || touchedError ? hasError : false) || help }\n        validateStatus={submittedError || touchedError ? \"error\" : \"success\"}\n        style={formItemStyle}\n        {...layout}\n      >\n        <AntComponent\n          {...field}\n          {...props}\n          onBlur={onBlur}\n          style={componentStyle}\n          onChange={type ? onInputChange : onChange}\n        >\n          {/* {selectOptions &&\n            selectOptions.map(name => <Option key={name}>{name}</Option>)} */}\n        </AntComponent>\n      </FormItem>\n  );\n};\n\nexport const AntInput = FormikField(Input);\nexport const AntInputPassword = FormikField(Input.Password);\nexport const AntSelect = FormikField(Select);\nexport const AntDatePicker = FormikField(DatePicker);\nexport const AntTimePicker = FormikField(TimePicker);\nexport const AntRangePicker = FormikField(RangePicker);\nexport const AntInputNumber = FormikField(InputNumber);\nexport const AntTextArea = FormikField(TextArea);\n\n","import React, { Component } from 'react'\nimport { Form, Button, message } from 'antd'\nimport { Formik, Field} from 'formik';\nimport * as Yup from 'yup';\nimport { AntInput, AntInputPassword } from \"../../components/FormikField/FormikField\";\n\nimport './Login.less'\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email('Enter a valid email').required('This field is Required'),\n  password: Yup.string().required('This field is Required'),\n})\n\nexport class Login extends Component {\n\n  login = (values) => {\n    if (values.email === 'admin@example.com' && values.password === 'admin') {\n      localStorage.setItem('isAuthenticated', true);\n      this.props.history.push('/dashboard')\n    } else {\n      message.error('Email and Password is Incorrect');\n    }\n  }\n\n  render() {\n    const { item = {}} = this.props\n    return (\n      <React.Fragment>\n        <div className=\"form\">\n\n          <div className=\"logo\">\n            {/* <img alt=\"logo\" src={config.logoPath} /> */}\n            <span>QuadX</span>\n          </div>\n\n            <Formik\n              validationSchema={validationSchema}\n              initialValues={item}\n              enableReinitialize\n              onSubmit={(values, {setSubmitting, resetForm}) => {\n              setSubmitting(false);\n              this.login(values)\n              }}\n            >\n            {({\n              values,\n              handleSubmit,\n              isSubmitting,\n              submitCount,\n            }) => (\n            <Form layout=\"horizontal\" onSubmit={handleSubmit}>\n              <Field\n                component={AntInput}\n                placeholder=\"Email\"\n                name=\"email\"\n                type=\"text\"\n                required\n                submitCount={submitCount}\n                hasFeedback\n              />\n\n              <Field\n                component={AntInputPassword}\n                placeholder=\"Password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                submitCount={submitCount}\n                hasFeedback\n              />\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Login\n                </Button>\n              </Form.Item>\n            </Form>\n            )}\n          </Formik>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter, Link } from 'react-router-dom';\nimport { Layout, Menu, Icon, Input, Button } from 'antd';\n\nimport './DashboardLayout.less'\n\nconst { Header, Sider, Content } = Layout;\n\nexport class DashboardLayout extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n  }\n\n  state = {\n    collapsed: false,\n  };\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  handleLogout = () => {\n    localStorage.removeItem('isAuthenticated');\n    this.props.history.push('/login')\n  }\n\n  render() {\n    const {children} = this.props;\n    const {collapsed} = this.state;\n\n    const rightContent = [\n        <React.Fragment key=\"1\">\n          <span style={{ color: '#999', marginRight: 4 }}>\n            Hi,\n          </span>\n          <span>Admin</span>\n          <Button\n            icon=\"poweroff\"\n            shape=\"circle\"\n            style={{margin: '0px 10px'}}\n            onClick={this.handleLogout}\n          />\n        </React.Fragment>\n    ]\n\n    return (\n      <Layout>\n        <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n          <div className=\"brand\">\n            <div className=\"logo\">\n              {collapsed ? null : <h1>QuadX</h1>}\n            </div>\n          </div>\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\">\n              <Icon type=\"dashboard\" />\n              <span>Dashboard</span>\n              <Link to=\"/dashboard\" />\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Icon type=\"file\" />\n              <span>Page 2</span>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Icon type=\"file\" />\n              <span>Page 3</span>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <div className=\"container\">\n          <Header className=\"header\">\n            <div\n              className=\"button\"\n              onClick={this.toggle}\n            >\n              <Icon\n                className=\"trigger\"\n                type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n              />\n            </div>\n\n            <Input placeholder=\"Search\" prefix={<Icon type=\"search\"/>} className=\"search\" />\n\n            <div className=\"rightContainer\">{rightContent}</div>\n          </Header>\n          <Content className=\"content\">\n            {children}\n          </Content>\n          </div>\n      </Layout>\n    )\n  }\n}\n\nexport default withRouter(DashboardLayout)\n","export const MERCHANTS = {\n  FETCH_MERCHANTS: 'MERCHANTS/FETCH_MERCHANTS',\n  FETCH_MERCHANT: 'MERCHANTS/FETCH_MERCHANT',\n  UPDATE_MERCHANT: 'MERCHANTS/UPDATE_MERCHANT',\n  DELETE_MERCHANT: 'MERCHANTS/DELETE_MERCHANT',\n  ADD_MERCHANT: 'MERCHANTS/ADD_MERCHANT'\n};\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport DashboardLayout from '../../layouts/DashboardLayout'\nimport { Table, Divider, Typography, Button, Modal} from 'antd'\nimport { fetchMerchants, deleteMerchant } from '../../redux/actions/merchants';\nimport './Dashboard.less'\n\nconst { Title } = Typography;\nconst { confirm } = Modal\n\n\n\nexport class Dashboard extends Component {\n  componentDidMount() {\n    this.props.fetchMerchants();\n  }\n\n  handleDelete = (id) => {\n    const { deleteMerchant } = this.props;\n    confirm({\n      title: `Are you sure you want to delete this Merchant?`,\n      onOk() {\n        deleteMerchant(id)\n      }\n    })\n  }\n\n  render() {\n    const { merchants } = this.props\n\n    const columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        render: text => text,\n      },\n      {\n        title: 'Action',\n        key: 'action',\n        width: 400,\n        render: (text, record) => (\n          <span>\n            <Button\n              onClick={() => this.props.history.push(`/dashboard/editmerchant/${record.id}`)}\n            >\n              Edit\n            </Button>\n            <Divider type=\"vertical\" />\n            <Button\n              type=\"danger\"\n              onClick={() => this.handleDelete(record.id)}\n            >\n              Delete\n            </Button>\n          </span>\n        ),\n      },\n    ];\n\n    return (\n      <DashboardLayout>\n        <div className=\"page-header\">\n          <Title level={2} className=\"page-header-title\">List of Merchandise</Title>\n\n          <Button\n            type=\"primary\"\n            className=\"page-header-button\"\n            icon=\"plus\"\n            onClick={() => this.props.history.push('/dashboard/addmerchant')}\n            >\n            Add Merchant\n          </Button>\n        </div>\n\n        <Table columns={columns} dataSource={merchants.merchants} rowKey={record => record.id} />\n      </DashboardLayout>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    merchants: state.merchants\n  };\n};\n\nconst mapDispatchToProps =  {\n  fetchMerchants,\n  deleteMerchant\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard)\n","import {MERCHANTS} from '../../constants/actions/merchants';\n\nexport const fetchMerchants = params => ({\n  type: MERCHANTS.FETCH_MERCHANTS,\n  params\n});\n\nexport const fetchMerchant = params => ({\n  type: MERCHANTS.FETCH_MERCHANT,\n  params\n});\n\nexport const updateMerchant = params => ({\n  type: MERCHANTS.UPDATE_MERCHANT,\n  params\n});\n\nexport const deleteMerchant = params => ({\n  type: MERCHANTS.DELETE_MERCHANT,\n  params\n});\n\nexport const addMerchant = params => ({\n  type: MERCHANTS.ADD_MERCHANT,\n  params\n});","export const formItemLayout = {\n  labelCol: {\n    md: { span: 6 },\n    lg: { span: 4 }\n  },\n  wrapperCol: {\n    md: { span: 12 },\n    lg: { span: 6 }\n  }\n};\n\nexport const tailFormItemLayout = {\n  wrapperCol: {\n    md: {\n      span: 18,\n      offset: 2\n    },\n    lg: {\n      span: 12,\n      offset: 0\n    }\n  }\n};","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport * as uuid from 'uuid/v4';\nimport { Typography, Button, Form, Collapse, Row, Col, Popconfirm } from 'antd'\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport DashboardLayout from '../../layouts/DashboardLayout'\nimport { AntInput } from \"../../components/FormikField/FormikField\";\nimport { formItemLayout, tailFormItemLayout } from '../../utils/constant'\nimport { addMerchant } from '../../redux/actions/merchants';\nimport './Dashboard.less'\n\nconst { Title } = Typography;\nconst { Panel } = Collapse;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().max(80, 'Must be shorter than 35').required('This field is Required'),\n  shipping_fee: Yup.object().shape({\n    metro_manila: Yup.object().shape({\n        box: Yup.number(null,\"Must be a number\").required('This field is Required'),\n        oversized: Yup.number(\"Must be a number\").required('This field is Required'),\n        big_pouch: Yup.number(\"Must be a number\").required('This field is Required'),\n        small_pouch: Yup.number(\"Must be a number\").required('This field is Required'),\n    }),\n    provincial: Yup.object().shape({\n        box: Yup.number(\"Must be a number\").required('This field is Required'),\n        oversized: Yup.number(\"Must be a number\").required('This field is Required'),\n        big_pouch: Yup.number(\"Must be a number\").required('This field is Required'),\n        small_pouch: Yup.number(\"Must be a number\").required('This field is Required'),\n    }),\n    intra_provincial: Yup.object().shape({\n        box: Yup.number(\"Must be a number\").required('This field is Required'),\n        oversized: Yup.number(\"Must be a number\").required('This field is Required'),\n        big_pouch: Yup.number(\"Must be a number\").required('This field is Required'),\n        small_pouch: Yup.number(\"Must be a number\").required('This field is Required'),\n    })\n  }),\n})\n\nexport class AddMerchant extends Component {\n\n  render() {\n    const { item = {}} = this.props\n\n    return (\n      <DashboardLayout>\n        <div className=\"page-header\">\n          <Title level={2} className=\"page-header-title\">Add New Merchant</Title>\n        </div>\n\n        <div className=\"page-form\">\n          <Formik\n            validationSchema={validationSchema}\n            initialValues={item}\n            enableReinitialize\n            onSubmit={(values, {setSubmitting, resetForm}) => {\n            setSubmitting(false);\n\n              this.props.addMerchant({id: uuid(), ...values})\n\n              this.props.history.push('/dashboard')\n\n              }}\n            >\n            {({\n              values,\n              handleSubmit,\n              isSubmitting,\n              submitCount,\n            }) => (\n              <Form layout=\"horizontal\" onSubmit={handleSubmit} {...formItemLayout}>\n                <Title level={4}>Merchant Name</Title>\n                <Field\n                  component={AntInput}\n                  placeholder=\"Email\"\n                  name=\"name\"\n                  type=\"text\"\n                  required\n                  submitCount={submitCount}\n                  hasFeedback\n                />\n\n                <Title level={4}>Shipping fee</Title>\n                <Collapse defaultActiveKey={['1']}>\n                  <Panel header=\"Metro Manila\" key=\"1\">\n                    <Row gutter={8}>\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Box\"\n                          name=\"shipping_fee.metro_manila.box\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Oversized\"\n                          name=\"shipping_fee.metro_manila.oversized\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n                    </Row>\n                    <Row gutter={8}>\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Big Pouch\"\n                          name=\"shipping_fee.metro_manila.big_pouch\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Small Pouch\"\n                          name=\"shipping_fee.metro_manila.small_pouch\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n                    </Row>\n                  </Panel>\n                  <Panel header=\"Provincial\" key=\"2\">\n                    <Row gutter={8}>\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Box\"\n                          name=\"shipping_fee.provincial.box\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Oversized\"\n                          name=\"shipping_fee.provincial.oversized\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n                    </Row>\n                    <Row gutter={8}>\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Big Pouch\"\n                          name=\"shipping_fee.provincial.big_pouch\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Small Pouch\"\n                          name=\"shipping_fee.provincial.small_pouch\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n                    </Row>\n                  </Panel>\n                  <Panel header=\"Intra Provincial\" key=\"3\" >\n                    <Row gutter={8}>\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Box\"\n                          name=\"shipping_fee.intra_provincial.box\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Oversized\"\n                          name=\"shipping_fee.intra_provincial.oversized\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n                    </Row>\n                    <Row gutter={8}>\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Big Pouch\"\n                          name=\"shipping_fee.intra_provincial.big_pouch\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Small Pouch\"\n                          name=\"shipping_fee.intra_provincial.small_pouch\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n                    </Row>\n                  </Panel>\n                </Collapse>\n\n                <Form.Item style={{padding: '10px 0px'}} {...tailFormItemLayout}>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    icon=\"upload\"\n                    style={{marginRight: 16}}\n                    disabled={isSubmitting}\n                  >\n                    Save\n                  </Button>\n\n\n                  <Popconfirm\n                    placement=\"top\"\n                    title='Discard changes?'\n                    onConfirm={() => this.props.history.push('/dashboard')}\n                    okText=\"Discard\"\n                    cancelText=\"Cancel\"\n                    disabled={isSubmitting}\n                  >\n                    <Button>Cancel</Button>\n                  </Popconfirm>\n                </Form.Item>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </DashboardLayout>\n    )\n  }\n}\n\nconst mapDispatchToProps =  {\n  addMerchant\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(AddMerchant)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Typography, Button, Form, Collapse, Row, Col, Popconfirm } from 'antd'\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport DashboardLayout from '../../layouts/DashboardLayout'\nimport { AntInput } from \"../../components/FormikField/FormikField\";\nimport { formItemLayout, tailFormItemLayout } from '../../utils/constant'\nimport { updateMerchant, fetchMerchant } from '../../redux/actions/merchants';\nimport './Dashboard.less'\n\nconst { Title } = Typography;\nconst { Panel } = Collapse;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().max(80, 'Must be shorter than 35').required('This field is Required'),\n  shipping_fee: Yup.object().shape({\n    metro_manila: Yup.object().shape({\n        box: Yup.number(null,\"Must be a number\").required('This field is Required'),\n        oversized: Yup.number(\"Must be a number\").required('This field is Required'),\n        big_pouch: Yup.number(\"Must be a number\").required('This field is Required'),\n        small_pouch: Yup.number(\"Must be a number\").required('This field is Required'),\n    }),\n    provincial: Yup.object().shape({\n        box: Yup.number(\"Must be a number\").required('This field is Required'),\n        oversized: Yup.number(\"Must be a number\").required('This field is Required'),\n        big_pouch: Yup.number(\"Must be a number\").required('This field is Required'),\n        small_pouch: Yup.number(\"Must be a number\").required('This field is Required'),\n    }),\n    intra_provincial: Yup.object().shape({\n        box: Yup.number(\"Must be a number\").required('This field is Required'),\n        oversized: Yup.number(\"Must be a number\").required('This field is Required'),\n        big_pouch: Yup.number(\"Must be a number\").required('This field is Required'),\n        small_pouch: Yup.number(\"Must be a number\").required('This field is Required'),\n    })\n  }),\n})\n\nexport class EditMerchant extends Component {\n  state = {\n    merchant: {}\n  }\n  componentDidMount() {\n    const {match: {params}} = this.props;\n    this.props.fetchMerchant(params.id);\n  }\n\n  render() {\n    const { merchant } = this.props\n\n    return (\n      <DashboardLayout>\n        <div className=\"page-header\">\n          <Title level={2} className=\"page-header-title\">Edit Merchant Info</Title>\n        </div>\n\n        <div className=\"page-form\">\n          <Formik\n            validationSchema={validationSchema}\n            initialValues={merchant}\n            enableReinitialize\n            onSubmit={(values, {setSubmitting, resetForm}) => {\n            setSubmitting(false);\n\n              this.props.updateMerchant(values)\n\n              this.props.history.push('/dashboard')\n\n              }}\n            >\n            {({\n              values,\n              handleSubmit,\n              isSubmitting,\n              submitCount,\n            }) => (\n              <Form layout=\"horizontal\" onSubmit={handleSubmit} {...formItemLayout}>\n                <Title level={4}>Merchant Name</Title>\n                <Field\n                  component={AntInput}\n                  placeholder=\"Email\"\n                  name=\"name\"\n                  type=\"text\"\n                  required\n                  submitCount={submitCount}\n                  hasFeedback\n                />\n\n                <Title level={4}>Shipping fee</Title>\n                <Collapse defaultActiveKey={['1']}>\n                  <Panel header=\"Metro Manila\" key=\"1\">\n                    <Row gutter={8}>\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Box\"\n                          name=\"shipping_fee.metro_manila.box\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Oversized\"\n                          name=\"shipping_fee.metro_manila.oversized\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n                    </Row>\n                    <Row gutter={8}>\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Big Pouch\"\n                          name=\"shipping_fee.metro_manila.big_pouch\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Small Pouch\"\n                          name=\"shipping_fee.metro_manila.small_pouch\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n                    </Row>\n                  </Panel>\n                  <Panel header=\"Provincial\" key=\"2\">\n                  <Row gutter={8}>\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Box\"\n                          name=\"shipping_fee.provincial.box\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Oversized\"\n                          name=\"shipping_fee.provincial.oversized\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n                    </Row>\n                    <Row gutter={8}>\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Big Pouch\"\n                          name=\"shipping_fee.provincial.big_pouch\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Small Pouch\"\n                          name=\"shipping_fee.provincial.small_pouch\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n                    </Row>\n                  </Panel>\n                  <Panel header=\"Intra Provincial\" key=\"3\" >\n                    <Row gutter={8}>\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Box\"\n                          name=\"shipping_fee.intra_provincial.box\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Oversized\"\n                          name=\"shipping_fee.intra_provincial.oversized\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n                    </Row>\n                    <Row gutter={8}>\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Big Pouch\"\n                          name=\"shipping_fee.intra_provincial.big_pouch\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n\n                      <Col span={12}>\n                        <Field\n                          component={AntInput}\n                          label=\"Small Pouch\"\n                          name=\"shipping_fee.intra_provincial.small_pouch\"\n                          type=\"number\"\n                          required\n                          submitCount={submitCount}\n                          hasFeedback\n                        />\n                      </Col>\n                    </Row>\n                  </Panel>\n                </Collapse>\n\n                <Form.Item style={{padding: '10px 0px'}} {...tailFormItemLayout}>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    icon=\"edit\"\n                    style={{marginRight: 16}}\n                    disabled={isSubmitting}\n                  >\n                    Update\n                  </Button>\n\n\n                  <Popconfirm\n                    placement=\"top\"\n                    title='Discard changes?'\n                    onConfirm={() => this.props.history.push('/dashboard')}\n                    okText=\"Discard\"\n                    cancelText=\"Cancel\"\n                    disabled={isSubmitting}\n                  >\n                    <Button>Cancel</Button>\n                  </Popconfirm>\n                </Form.Item>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </DashboardLayout>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    merchant: state.merchants.merchant\n  };\n};\n\nconst mapDispatchToProps =  {\n  fetchMerchant,\n  updateMerchant\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditMerchant)\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom'\n\nimport Login from './containers/Login/Login'\nimport Dashboard from './containers/Dashboard/Dashboard'\nimport AddMerchant from './containers/Dashboard/AddMerchant'\nimport EditMerchant from './containers/Dashboard/EditMerchant'\n\nconst checkAuth = () => {\n  const isAuthenticated = localStorage.getItem('isAuthenticated');\n  if (!isAuthenticated) {\n    return false;\n  }\n\n  return true;\n}\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    checkAuth() ? (\n      <Component {...props} />\n    ) : (\n        <Redirect to={{ pathname: '/login' }} />\n      )\n  )} />\n)\n\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"dashboard\">\n      <Switch>\n        <Route path=\"/login\" exact component={Login} />\n        <PrivateRoute path=\"/dashboard\" exact component={Dashboard} />\n        <PrivateRoute path=\"/dashboard/addmerchant\" exact component={AddMerchant} />\n        <PrivateRoute path=\"/dashboard/editmerchant/:id\" exact component={EditMerchant} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { MERCHANTS } from '../../constants/actions/merchants';\n\nconst initialState = {\n  merchants: [\n    {\n      id: 1,\n      name:'Merchant One',\n      shipping_fee:\n        {\n          metro_manila: {\n            box: '50.00',\n            oversized: '100.00',\n            big_pouch: '80.00',\n            small_pouch: '30.00'\n          },\n          provincial: {\n            box: '50.00',\n            oversized: '100.00',\n            big_pouch: '80.00',\n            small_pouch: '30.00'\n          },\n          intra_provincial: {\n            box: '50.00',\n            oversized: '100.00',\n            big_pouch: '80.00',\n            small_pouch: '30.00'\n          }\n        }\n    },\n    {\n      id: 2,\n      name:'Merchant Two',\n      shipping_fee:\n        {\n          metro_manila: {\n            box: '50.00',\n            oversized: '100.00',\n            big_pouch: '80.00',\n            small_pouch: '30.00'\n          },\n          provincial: {\n            box: '50.00',\n            oversized: '100.00',\n            big_pouch: '80.00',\n            small_pouch: '30.00'\n          },\n          intra_provincial: {\n            box: '50.00',\n            oversized: '100.00',\n            big_pouch: '80.00',\n            small_pouch: '30.00'\n          }\n        }\n    }\n   ],\n  merchant: {},\n  isLoading: false\n};\n\nexport default function merchantsReducer(state = initialState, action) {\n  switch (action.type) {\n    case MERCHANTS.ADD_MERCHANT:\n      return {\n        ...state,\n        merchants: [...state.merchants, action.params],\n        isLoading: false\n      };\n    case MERCHANTS.FETCH_MERCHANTS:\n      return {\n        ...state,\n        merchants: [...state.merchants],\n        isLoading: false\n      };\n    case MERCHANTS.FETCH_MERCHANT:\n      return {\n        ...state,\n        merchant: state.merchants.find(x => x.id == action.params),\n        isLoading: false\n      };\n    case MERCHANTS.UPDATE_MERCHANT:\n        return {\n          ...state,\n          merchants: state.merchants.map(merchant => {\n            if (merchant.id !== action.params.id) {\n              return merchant;\n            } else {\n              return { ...merchant, ...action.params };\n            }\n          }),\n          isLoading: false\n      };\n    case MERCHANTS.DELETE_MERCHANT:\n        return {\n          ...state,\n          merchants: state.merchants.filter(i => i.id !== action.params),\n          isLoading: false\n      };\n    default:\n      return state;\n  }\n}","import {combineReducers} from 'redux';\nimport merchants from './merchants';\n\n\nexport default combineReducers({\n  merchants: merchants\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './redux/reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}